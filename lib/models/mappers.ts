/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";


export const V1GroupVersionForDiscovery: msRest.CompositeMapper = {
  serializedName: "v1.GroupVersionForDiscovery",
  type: {
    name: "Composite",
    className: "V1GroupVersionForDiscovery",
    modelProperties: {
      groupVersion: {
        required: true,
        serializedName: "groupVersion",
        type: {
          name: "String"
        }
      },
      version: {
        required: true,
        serializedName: "version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1ServerAddressByClientCIDR: msRest.CompositeMapper = {
  serializedName: "v1.ServerAddressByClientCIDR",
  type: {
    name: "Composite",
    className: "V1ServerAddressByClientCIDR",
    modelProperties: {
      clientCIDR: {
        required: true,
        serializedName: "clientCIDR",
        type: {
          name: "String"
        }
      },
      serverAddress: {
        required: true,
        serializedName: "serverAddress",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1APIGroup: msRest.CompositeMapper = {
  serializedName: "v1.APIGroup",
  type: {
    name: "Composite",
    className: "V1APIGroup",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      preferredVersion: {
        serializedName: "preferredVersion",
        type: {
          name: "Composite",
          className: "V1GroupVersionForDiscovery"
        }
      },
      serverAddressByClientCIDRs: {
        serializedName: "serverAddressByClientCIDRs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1ServerAddressByClientCIDR"
            }
          }
        }
      },
      versions: {
        required: true,
        serializedName: "versions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1GroupVersionForDiscovery"
            }
          }
        }
      }
    }
  }
};

export const V1APIGroupList: msRest.CompositeMapper = {
  serializedName: "v1.APIGroupList",
  type: {
    name: "Composite",
    className: "V1APIGroupList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      groups: {
        required: true,
        serializedName: "groups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1APIGroup"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1APIResource: msRest.CompositeMapper = {
  serializedName: "v1.APIResource",
  type: {
    name: "Composite",
    className: "V1APIResource",
    modelProperties: {
      categories: {
        serializedName: "categories",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      group: {
        serializedName: "group",
        type: {
          name: "String"
        }
      },
      kind: {
        required: true,
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      namespaced: {
        required: true,
        serializedName: "namespaced",
        type: {
          name: "Boolean"
        }
      },
      shortNames: {
        serializedName: "shortNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      singularName: {
        required: true,
        serializedName: "singularName",
        type: {
          name: "String"
        }
      },
      verbs: {
        required: true,
        serializedName: "verbs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1APIResourceList: msRest.CompositeMapper = {
  serializedName: "v1.APIResourceList",
  type: {
    name: "Composite",
    className: "V1APIResourceList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      groupVersion: {
        required: true,
        serializedName: "groupVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      resources: {
        required: true,
        serializedName: "resources",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1APIResource"
            }
          }
        }
      }
    }
  }
};

export const V1NodeSelectorRequirement: msRest.CompositeMapper = {
  serializedName: "v1.NodeSelectorRequirement",
  type: {
    name: "Composite",
    className: "V1NodeSelectorRequirement",
    modelProperties: {
      key: {
        required: true,
        serializedName: "key",
        type: {
          name: "String"
        }
      },
      operator: {
        required: true,
        serializedName: "operator",
        type: {
          name: "String"
        }
      },
      values: {
        serializedName: "values",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const V1NodeSelectorTerm: msRest.CompositeMapper = {
  serializedName: "v1.NodeSelectorTerm",
  type: {
    name: "Composite",
    className: "V1NodeSelectorTerm",
    modelProperties: {
      matchExpressions: {
        serializedName: "matchExpressions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1NodeSelectorRequirement"
            }
          }
        }
      },
      matchFields: {
        serializedName: "matchFields",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1NodeSelectorRequirement"
            }
          }
        }
      }
    }
  }
};

export const V1PreferredSchedulingTerm: msRest.CompositeMapper = {
  serializedName: "v1.PreferredSchedulingTerm",
  type: {
    name: "Composite",
    className: "V1PreferredSchedulingTerm",
    modelProperties: {
      preference: {
        required: true,
        serializedName: "preference",
        type: {
          name: "Composite",
          className: "V1NodeSelectorTerm"
        }
      },
      weight: {
        required: true,
        serializedName: "weight",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const V1NodeSelector: msRest.CompositeMapper = {
  serializedName: "v1.NodeSelector",
  type: {
    name: "Composite",
    className: "V1NodeSelector",
    modelProperties: {
      nodeSelectorTerms: {
        required: true,
        serializedName: "nodeSelectorTerms",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1NodeSelectorTerm"
            }
          }
        }
      }
    }
  }
};

export const V1NodeAffinity: msRest.CompositeMapper = {
  serializedName: "v1.NodeAffinity",
  type: {
    name: "Composite",
    className: "V1NodeAffinity",
    modelProperties: {
      preferredDuringSchedulingIgnoredDuringExecution: {
        serializedName: "preferredDuringSchedulingIgnoredDuringExecution",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1PreferredSchedulingTerm"
            }
          }
        }
      },
      requiredDuringSchedulingIgnoredDuringExecution: {
        serializedName: "requiredDuringSchedulingIgnoredDuringExecution",
        type: {
          name: "Composite",
          className: "V1NodeSelector"
        }
      }
    }
  }
};

export const V1LabelSelectorRequirement: msRest.CompositeMapper = {
  serializedName: "v1.LabelSelectorRequirement",
  type: {
    name: "Composite",
    className: "V1LabelSelectorRequirement",
    modelProperties: {
      key: {
        required: true,
        serializedName: "key",
        type: {
          name: "String"
        }
      },
      operator: {
        required: true,
        serializedName: "operator",
        type: {
          name: "String"
        }
      },
      values: {
        serializedName: "values",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const V1LabelSelector: msRest.CompositeMapper = {
  serializedName: "v1.LabelSelector",
  type: {
    name: "Composite",
    className: "V1LabelSelector",
    modelProperties: {
      matchExpressions: {
        serializedName: "matchExpressions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1LabelSelectorRequirement"
            }
          }
        }
      },
      matchLabels: {
        serializedName: "matchLabels",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const V1PodAffinityTerm: msRest.CompositeMapper = {
  serializedName: "v1.PodAffinityTerm",
  type: {
    name: "Composite",
    className: "V1PodAffinityTerm",
    modelProperties: {
      labelSelector: {
        serializedName: "labelSelector",
        type: {
          name: "Composite",
          className: "V1LabelSelector"
        }
      },
      namespaces: {
        serializedName: "namespaces",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      topologyKey: {
        required: true,
        serializedName: "topologyKey",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1WeightedPodAffinityTerm: msRest.CompositeMapper = {
  serializedName: "v1.WeightedPodAffinityTerm",
  type: {
    name: "Composite",
    className: "V1WeightedPodAffinityTerm",
    modelProperties: {
      podAffinityTerm: {
        required: true,
        serializedName: "podAffinityTerm",
        type: {
          name: "Composite",
          className: "V1PodAffinityTerm"
        }
      },
      weight: {
        required: true,
        serializedName: "weight",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const V1PodAffinity: msRest.CompositeMapper = {
  serializedName: "v1.PodAffinity",
  type: {
    name: "Composite",
    className: "V1PodAffinity",
    modelProperties: {
      preferredDuringSchedulingIgnoredDuringExecution: {
        serializedName: "preferredDuringSchedulingIgnoredDuringExecution",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1WeightedPodAffinityTerm"
            }
          }
        }
      },
      requiredDuringSchedulingIgnoredDuringExecution: {
        serializedName: "requiredDuringSchedulingIgnoredDuringExecution",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1PodAffinityTerm"
            }
          }
        }
      }
    }
  }
};

export const V1PodAntiAffinity: msRest.CompositeMapper = {
  serializedName: "v1.PodAntiAffinity",
  type: {
    name: "Composite",
    className: "V1PodAntiAffinity",
    modelProperties: {
      preferredDuringSchedulingIgnoredDuringExecution: {
        serializedName: "preferredDuringSchedulingIgnoredDuringExecution",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1WeightedPodAffinityTerm"
            }
          }
        }
      },
      requiredDuringSchedulingIgnoredDuringExecution: {
        serializedName: "requiredDuringSchedulingIgnoredDuringExecution",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1PodAffinityTerm"
            }
          }
        }
      }
    }
  }
};

export const V1Affinity: msRest.CompositeMapper = {
  serializedName: "v1.Affinity",
  type: {
    name: "Composite",
    className: "V1Affinity",
    modelProperties: {
      nodeAffinity: {
        serializedName: "nodeAffinity",
        type: {
          name: "Composite",
          className: "V1NodeAffinity"
        }
      },
      podAffinity: {
        serializedName: "podAffinity",
        type: {
          name: "Composite",
          className: "V1PodAffinity"
        }
      },
      podAntiAffinity: {
        serializedName: "podAntiAffinity",
        type: {
          name: "Composite",
          className: "V1PodAntiAffinity"
        }
      }
    }
  }
};

export const V1Bootloader: msRest.CompositeMapper = {
  serializedName: "v1.Bootloader",
  type: {
    name: "Composite",
    className: "V1Bootloader",
    modelProperties: {
      bios: {
        serializedName: "bios",
        type: {
          name: "Object"
        }
      },
      efi: {
        serializedName: "efi",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const V1CDRomTarget: msRest.CompositeMapper = {
  serializedName: "v1.CDRomTarget",
  type: {
    name: "Composite",
    className: "V1CDRomTarget",
    modelProperties: {
      bus: {
        serializedName: "bus",
        type: {
          name: "String"
        }
      },
      readonly: {
        serializedName: "readonly",
        type: {
          name: "Boolean"
        }
      },
      tray: {
        serializedName: "tray",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1CPUFeature: msRest.CompositeMapper = {
  serializedName: "v1.CPUFeature",
  type: {
    name: "Composite",
    className: "V1CPUFeature",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      policy: {
        serializedName: "policy",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1CPU: msRest.CompositeMapper = {
  serializedName: "v1.CPU",
  type: {
    name: "Composite",
    className: "V1CPU",
    modelProperties: {
      cores: {
        serializedName: "cores",
        type: {
          name: "Number"
        }
      },
      dedicatedCpuPlacement: {
        serializedName: "dedicatedCpuPlacement",
        type: {
          name: "Boolean"
        }
      },
      features: {
        serializedName: "features",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1CPUFeature"
            }
          }
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "String"
        }
      },
      sockets: {
        serializedName: "sockets",
        type: {
          name: "Number"
        }
      },
      threads: {
        serializedName: "threads",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const V1HPETTimer: msRest.CompositeMapper = {
  serializedName: "v1.HPETTimer",
  type: {
    name: "Composite",
    className: "V1HPETTimer",
    modelProperties: {
      present: {
        serializedName: "present",
        type: {
          name: "Boolean"
        }
      },
      tickPolicy: {
        serializedName: "tickPolicy",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1HypervTimer: msRest.CompositeMapper = {
  serializedName: "v1.HypervTimer",
  type: {
    name: "Composite",
    className: "V1HypervTimer",
    modelProperties: {
      present: {
        serializedName: "present",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const V1KVMTimer: msRest.CompositeMapper = {
  serializedName: "v1.KVMTimer",
  type: {
    name: "Composite",
    className: "V1KVMTimer",
    modelProperties: {
      present: {
        serializedName: "present",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const V1PITTimer: msRest.CompositeMapper = {
  serializedName: "v1.PITTimer",
  type: {
    name: "Composite",
    className: "V1PITTimer",
    modelProperties: {
      present: {
        serializedName: "present",
        type: {
          name: "Boolean"
        }
      },
      tickPolicy: {
        serializedName: "tickPolicy",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1RTCTimer: msRest.CompositeMapper = {
  serializedName: "v1.RTCTimer",
  type: {
    name: "Composite",
    className: "V1RTCTimer",
    modelProperties: {
      present: {
        serializedName: "present",
        type: {
          name: "Boolean"
        }
      },
      tickPolicy: {
        serializedName: "tickPolicy",
        type: {
          name: "String"
        }
      },
      track: {
        serializedName: "track",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1Timer: msRest.CompositeMapper = {
  serializedName: "v1.Timer",
  type: {
    name: "Composite",
    className: "V1Timer",
    modelProperties: {
      hpet: {
        serializedName: "hpet",
        type: {
          name: "Composite",
          className: "V1HPETTimer"
        }
      },
      hyperv: {
        serializedName: "hyperv",
        type: {
          name: "Composite",
          className: "V1HypervTimer"
        }
      },
      kvm: {
        serializedName: "kvm",
        type: {
          name: "Composite",
          className: "V1KVMTimer"
        }
      },
      pit: {
        serializedName: "pit",
        type: {
          name: "Composite",
          className: "V1PITTimer"
        }
      },
      rtc: {
        serializedName: "rtc",
        type: {
          name: "Composite",
          className: "V1RTCTimer"
        }
      }
    }
  }
};

export const V1ClockOffsetUTC: msRest.CompositeMapper = {
  serializedName: "v1.ClockOffsetUTC",
  type: {
    name: "Composite",
    className: "V1ClockOffsetUTC",
    modelProperties: {
      offsetSeconds: {
        serializedName: "offsetSeconds",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const V1Clock: msRest.CompositeMapper = {
  serializedName: "v1.Clock",
  type: {
    name: "Composite",
    className: "V1Clock",
    modelProperties: {
      timer: {
        required: true,
        serializedName: "timer",
        type: {
          name: "Composite",
          className: "V1Timer"
        }
      },
      timezone: {
        serializedName: "timezone",
        type: {
          name: "Object"
        }
      },
      utc: {
        serializedName: "utc",
        type: {
          name: "Composite",
          className: "V1ClockOffsetUTC"
        }
      }
    }
  }
};

export const V1LocalObjectReference: msRest.CompositeMapper = {
  serializedName: "v1.LocalObjectReference",
  type: {
    name: "Composite",
    className: "V1LocalObjectReference",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1CloudInitNoCloudSource: msRest.CompositeMapper = {
  serializedName: "v1.CloudInitNoCloudSource",
  type: {
    name: "Composite",
    className: "V1CloudInitNoCloudSource",
    modelProperties: {
      networkData: {
        serializedName: "networkData",
        type: {
          name: "String"
        }
      },
      networkDataBase64: {
        serializedName: "networkDataBase64",
        type: {
          name: "String"
        }
      },
      networkDataSecretRef: {
        serializedName: "networkDataSecretRef",
        type: {
          name: "Composite",
          className: "V1LocalObjectReference"
        }
      },
      secretRef: {
        serializedName: "secretRef",
        type: {
          name: "Composite",
          className: "V1LocalObjectReference"
        }
      },
      userData: {
        serializedName: "userData",
        type: {
          name: "String"
        }
      },
      userDataBase64: {
        serializedName: "userDataBase64",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1ConfigMapVolumeSource: msRest.CompositeMapper = {
  serializedName: "v1.ConfigMapVolumeSource",
  type: {
    name: "Composite",
    className: "V1ConfigMapVolumeSource",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      optional: {
        serializedName: "optional",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const V1ContainerDiskSource: msRest.CompositeMapper = {
  serializedName: "v1.ContainerDiskSource",
  type: {
    name: "Composite",
    className: "V1ContainerDiskSource",
    modelProperties: {
      image: {
        required: true,
        serializedName: "image",
        type: {
          name: "String"
        }
      },
      imagePullSecret: {
        serializedName: "imagePullSecret",
        type: {
          name: "String"
        }
      },
      path: {
        serializedName: "path",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1DHCPPrivateOptions: msRest.CompositeMapper = {
  serializedName: "v1.DHCPPrivateOptions",
  type: {
    name: "Composite",
    className: "V1DHCPPrivateOptions",
    modelProperties: {
      option: {
        required: true,
        serializedName: "option",
        type: {
          name: "Number"
        }
      },
      value: {
        required: true,
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1DHCPOptions: msRest.CompositeMapper = {
  serializedName: "v1.DHCPOptions",
  type: {
    name: "Composite",
    className: "V1DHCPOptions",
    modelProperties: {
      bootFileName: {
        serializedName: "bootFileName",
        type: {
          name: "String"
        }
      },
      ntpServers: {
        serializedName: "ntpServers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      privateOptions: {
        serializedName: "privateOptions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1DHCPPrivateOptions"
            }
          }
        }
      },
      tftpServerName: {
        serializedName: "tftpServerName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1DataVolumeSource: msRest.CompositeMapper = {
  serializedName: "v1.DataVolumeSource",
  type: {
    name: "Composite",
    className: "V1DataVolumeSource",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1Preconditions: msRest.CompositeMapper = {
  serializedName: "v1.Preconditions",
  type: {
    name: "Composite",
    className: "V1Preconditions",
    modelProperties: {
      uid: {
        serializedName: "uid",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const V1DeleteOptions: msRest.CompositeMapper = {
  serializedName: "v1.DeleteOptions",
  type: {
    name: "Composite",
    className: "V1DeleteOptions",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      dryRun: {
        serializedName: "dryRun",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      gracePeriodSeconds: {
        serializedName: "gracePeriodSeconds",
        type: {
          name: "Number"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      orphanDependents: {
        serializedName: "orphanDependents",
        type: {
          name: "Boolean"
        }
      },
      preconditions: {
        serializedName: "preconditions",
        type: {
          name: "Composite",
          className: "V1Preconditions"
        }
      },
      propagationPolicy: {
        serializedName: "propagationPolicy",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const V1DiskTarget: msRest.CompositeMapper = {
  serializedName: "v1.DiskTarget",
  type: {
    name: "Composite",
    className: "V1DiskTarget",
    modelProperties: {
      bus: {
        serializedName: "bus",
        type: {
          name: "String"
        }
      },
      pciAddress: {
        serializedName: "pciAddress",
        type: {
          name: "String"
        }
      },
      readonly: {
        serializedName: "readonly",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const V1FloppyTarget: msRest.CompositeMapper = {
  serializedName: "v1.FloppyTarget",
  type: {
    name: "Composite",
    className: "V1FloppyTarget",
    modelProperties: {
      readonly: {
        serializedName: "readonly",
        type: {
          name: "Boolean"
        }
      },
      tray: {
        serializedName: "tray",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1LunTarget: msRest.CompositeMapper = {
  serializedName: "v1.LunTarget",
  type: {
    name: "Composite",
    className: "V1LunTarget",
    modelProperties: {
      bus: {
        serializedName: "bus",
        type: {
          name: "String"
        }
      },
      readonly: {
        serializedName: "readonly",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const V1Disk: msRest.CompositeMapper = {
  serializedName: "v1.Disk",
  type: {
    name: "Composite",
    className: "V1Disk",
    modelProperties: {
      bootOrder: {
        serializedName: "bootOrder",
        type: {
          name: "Number"
        }
      },
      cache: {
        serializedName: "cache",
        type: {
          name: "String"
        }
      },
      cdrom: {
        serializedName: "cdrom",
        type: {
          name: "Composite",
          className: "V1CDRomTarget"
        }
      },
      dedicatedIOThread: {
        serializedName: "dedicatedIOThread",
        type: {
          name: "Boolean"
        }
      },
      disk: {
        serializedName: "disk",
        type: {
          name: "Composite",
          className: "V1DiskTarget"
        }
      },
      floppy: {
        serializedName: "floppy",
        type: {
          name: "Composite",
          className: "V1FloppyTarget"
        }
      },
      lun: {
        serializedName: "lun",
        type: {
          name: "Composite",
          className: "V1LunTarget"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      serial: {
        serializedName: "serial",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1Input: msRest.CompositeMapper = {
  serializedName: "v1.Input",
  type: {
    name: "Composite",
    className: "V1Input",
    modelProperties: {
      bus: {
        serializedName: "bus",
        type: {
          name: "String"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1Port: msRest.CompositeMapper = {
  serializedName: "v1.Port",
  type: {
    name: "Composite",
    className: "V1Port",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      port: {
        required: true,
        serializedName: "port",
        type: {
          name: "Number"
        }
      },
      protocol: {
        serializedName: "protocol",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1Interface: msRest.CompositeMapper = {
  serializedName: "v1.Interface",
  type: {
    name: "Composite",
    className: "V1Interface",
    modelProperties: {
      bootOrder: {
        serializedName: "bootOrder",
        type: {
          name: "Number"
        }
      },
      bridge: {
        serializedName: "bridge",
        type: {
          name: "Object"
        }
      },
      dhcpOptions: {
        serializedName: "dhcpOptions",
        type: {
          name: "Composite",
          className: "V1DHCPOptions"
        }
      },
      macAddress: {
        serializedName: "macAddress",
        type: {
          name: "String"
        }
      },
      masquerade: {
        serializedName: "masquerade",
        type: {
          name: "Object"
        }
      },
      model: {
        serializedName: "model",
        type: {
          name: "String"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      pciAddress: {
        serializedName: "pciAddress",
        type: {
          name: "String"
        }
      },
      ports: {
        serializedName: "ports",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1Port"
            }
          }
        }
      },
      slirp: {
        serializedName: "slirp",
        type: {
          name: "Object"
        }
      },
      sriov: {
        serializedName: "sriov",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const V1I6300ESBWatchdog: msRest.CompositeMapper = {
  serializedName: "v1.I6300ESBWatchdog",
  type: {
    name: "Composite",
    className: "V1I6300ESBWatchdog",
    modelProperties: {
      action: {
        serializedName: "action",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1Watchdog: msRest.CompositeMapper = {
  serializedName: "v1.Watchdog",
  type: {
    name: "Composite",
    className: "V1Watchdog",
    modelProperties: {
      i6300esb: {
        serializedName: "i6300esb",
        type: {
          name: "Composite",
          className: "V1I6300ESBWatchdog"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1Devices: msRest.CompositeMapper = {
  serializedName: "v1.Devices",
  type: {
    name: "Composite",
    className: "V1Devices",
    modelProperties: {
      autoattachGraphicsDevice: {
        serializedName: "autoattachGraphicsDevice",
        type: {
          name: "Boolean"
        }
      },
      autoattachPodInterface: {
        serializedName: "autoattachPodInterface",
        type: {
          name: "Boolean"
        }
      },
      blockMultiQueue: {
        serializedName: "blockMultiQueue",
        type: {
          name: "Boolean"
        }
      },
      disks: {
        serializedName: "disks",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1Disk"
            }
          }
        }
      },
      inputs: {
        serializedName: "inputs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1Input"
            }
          }
        }
      },
      interfaces: {
        serializedName: "interfaces",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1Interface"
            }
          }
        }
      },
      networkInterfaceMultiqueue: {
        serializedName: "networkInterfaceMultiqueue",
        type: {
          name: "Boolean"
        }
      },
      rng: {
        serializedName: "rng",
        type: {
          name: "Object"
        }
      },
      watchdog: {
        serializedName: "watchdog",
        type: {
          name: "Composite",
          className: "V1Watchdog"
        }
      }
    }
  }
};

export const V1FeatureState: msRest.CompositeMapper = {
  serializedName: "v1.FeatureState",
  type: {
    name: "Composite",
    className: "V1FeatureState",
    modelProperties: {
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const V1FeatureAPIC: msRest.CompositeMapper = {
  serializedName: "v1.FeatureAPIC",
  type: {
    name: "Composite",
    className: "V1FeatureAPIC",
    modelProperties: {
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      },
      endOfInterrupt: {
        serializedName: "endOfInterrupt",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const V1FeatureSpinlocks: msRest.CompositeMapper = {
  serializedName: "v1.FeatureSpinlocks",
  type: {
    name: "Composite",
    className: "V1FeatureSpinlocks",
    modelProperties: {
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      },
      spinlocks: {
        serializedName: "spinlocks",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const V1FeatureVendorID: msRest.CompositeMapper = {
  serializedName: "v1.FeatureVendorID",
  type: {
    name: "Composite",
    className: "V1FeatureVendorID",
    modelProperties: {
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      },
      vendorid: {
        serializedName: "vendorid",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1FeatureHyperv: msRest.CompositeMapper = {
  serializedName: "v1.FeatureHyperv",
  type: {
    name: "Composite",
    className: "V1FeatureHyperv",
    modelProperties: {
      evmcs: {
        serializedName: "evmcs",
        type: {
          name: "Composite",
          className: "V1FeatureState"
        }
      },
      frequencies: {
        serializedName: "frequencies",
        type: {
          name: "Composite",
          className: "V1FeatureState"
        }
      },
      ipi: {
        serializedName: "ipi",
        type: {
          name: "Composite",
          className: "V1FeatureState"
        }
      },
      reenlightenment: {
        serializedName: "reenlightenment",
        type: {
          name: "Composite",
          className: "V1FeatureState"
        }
      },
      relaxed: {
        serializedName: "relaxed",
        type: {
          name: "Composite",
          className: "V1FeatureState"
        }
      },
      reset: {
        serializedName: "reset",
        type: {
          name: "Composite",
          className: "V1FeatureState"
        }
      },
      runtime: {
        serializedName: "runtime",
        type: {
          name: "Composite",
          className: "V1FeatureState"
        }
      },
      spinlocks: {
        serializedName: "spinlocks",
        type: {
          name: "Composite",
          className: "V1FeatureSpinlocks"
        }
      },
      synic: {
        serializedName: "synic",
        type: {
          name: "Composite",
          className: "V1FeatureState"
        }
      },
      synictimer: {
        serializedName: "synictimer",
        type: {
          name: "Composite",
          className: "V1FeatureState"
        }
      },
      tlbflush: {
        serializedName: "tlbflush",
        type: {
          name: "Composite",
          className: "V1FeatureState"
        }
      },
      vapic: {
        serializedName: "vapic",
        type: {
          name: "Composite",
          className: "V1FeatureState"
        }
      },
      vendorid: {
        serializedName: "vendorid",
        type: {
          name: "Composite",
          className: "V1FeatureVendorID"
        }
      },
      vpindex: {
        serializedName: "vpindex",
        type: {
          name: "Composite",
          className: "V1FeatureState"
        }
      }
    }
  }
};

export const V1Features: msRest.CompositeMapper = {
  serializedName: "v1.Features",
  type: {
    name: "Composite",
    className: "V1Features",
    modelProperties: {
      acpi: {
        serializedName: "acpi",
        type: {
          name: "Composite",
          className: "V1FeatureState"
        }
      },
      apic: {
        serializedName: "apic",
        type: {
          name: "Composite",
          className: "V1FeatureAPIC"
        }
      },
      hyperv: {
        serializedName: "hyperv",
        type: {
          name: "Composite",
          className: "V1FeatureHyperv"
        }
      },
      smm: {
        serializedName: "smm",
        type: {
          name: "Composite",
          className: "V1FeatureState"
        }
      }
    }
  }
};

export const V1Firmware: msRest.CompositeMapper = {
  serializedName: "v1.Firmware",
  type: {
    name: "Composite",
    className: "V1Firmware",
    modelProperties: {
      bootloader: {
        serializedName: "bootloader",
        type: {
          name: "Composite",
          className: "V1Bootloader"
        }
      },
      serial: {
        serializedName: "serial",
        type: {
          name: "String"
        }
      },
      uuid: {
        serializedName: "uuid",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1Machine: msRest.CompositeMapper = {
  serializedName: "v1.Machine",
  type: {
    name: "Composite",
    className: "V1Machine",
    modelProperties: {
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1Hugepages: msRest.CompositeMapper = {
  serializedName: "v1.Hugepages",
  type: {
    name: "Composite",
    className: "V1Hugepages",
    modelProperties: {
      pageSize: {
        serializedName: "pageSize",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1Memory: msRest.CompositeMapper = {
  serializedName: "v1.Memory",
  type: {
    name: "Composite",
    className: "V1Memory",
    modelProperties: {
      guest: {
        serializedName: "guest",
        type: {
          name: "String"
        }
      },
      hugepages: {
        serializedName: "hugepages",
        type: {
          name: "Composite",
          className: "V1Hugepages"
        }
      }
    }
  }
};

export const V1ResourceRequirements: msRest.CompositeMapper = {
  serializedName: "v1.ResourceRequirements",
  type: {
    name: "Composite",
    className: "V1ResourceRequirements",
    modelProperties: {
      limits: {
        serializedName: "limits",
        type: {
          name: "Object"
        }
      },
      overcommitGuestOverhead: {
        serializedName: "overcommitGuestOverhead",
        type: {
          name: "Boolean"
        }
      },
      requests: {
        serializedName: "requests",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const V1DomainSpec: msRest.CompositeMapper = {
  serializedName: "v1.DomainSpec",
  type: {
    name: "Composite",
    className: "V1DomainSpec",
    modelProperties: {
      clock: {
        serializedName: "clock",
        type: {
          name: "Composite",
          className: "V1Clock"
        }
      },
      cpu: {
        serializedName: "cpu",
        type: {
          name: "Composite",
          className: "V1CPU"
        }
      },
      devices: {
        required: true,
        serializedName: "devices",
        type: {
          name: "Composite",
          className: "V1Devices"
        }
      },
      features: {
        serializedName: "features",
        type: {
          name: "Composite",
          className: "V1Features"
        }
      },
      firmware: {
        serializedName: "firmware",
        type: {
          name: "Composite",
          className: "V1Firmware"
        }
      },
      ioThreadsPolicy: {
        serializedName: "ioThreadsPolicy",
        type: {
          name: "Object"
        }
      },
      machine: {
        serializedName: "machine",
        type: {
          name: "Composite",
          className: "V1Machine"
        }
      },
      memory: {
        serializedName: "memory",
        type: {
          name: "Composite",
          className: "V1Memory"
        }
      },
      resources: {
        serializedName: "resources",
        type: {
          name: "Composite",
          className: "V1ResourceRequirements"
        }
      }
    }
  }
};

export const V1EmptyDiskSource: msRest.CompositeMapper = {
  serializedName: "v1.EmptyDiskSource",
  type: {
    name: "Composite",
    className: "V1EmptyDiskSource",
    modelProperties: {
      capacity: {
        required: true,
        serializedName: "capacity",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1PersistentVolumeClaimVolumeSource: msRest.CompositeMapper = {
  serializedName: "v1.PersistentVolumeClaimVolumeSource",
  type: {
    name: "Composite",
    className: "V1PersistentVolumeClaimVolumeSource",
    modelProperties: {
      claimName: {
        required: true,
        serializedName: "claimName",
        type: {
          name: "String"
        }
      },
      readOnly: {
        serializedName: "readOnly",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const V1EphemeralVolumeSource: msRest.CompositeMapper = {
  serializedName: "v1.EphemeralVolumeSource",
  type: {
    name: "Composite",
    className: "V1EphemeralVolumeSource",
    modelProperties: {
      persistentVolumeClaim: {
        serializedName: "persistentVolumeClaim",
        type: {
          name: "Composite",
          className: "V1PersistentVolumeClaimVolumeSource"
        }
      }
    }
  }
};

export const V1GenieNetwork: msRest.CompositeMapper = {
  serializedName: "v1.GenieNetwork",
  type: {
    name: "Composite",
    className: "V1GenieNetwork",
    modelProperties: {
      networkName: {
        required: true,
        serializedName: "networkName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1HTTPHeader: msRest.CompositeMapper = {
  serializedName: "v1.HTTPHeader",
  type: {
    name: "Composite",
    className: "V1HTTPHeader",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      value: {
        required: true,
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1HTTPGetAction: msRest.CompositeMapper = {
  serializedName: "v1.HTTPGetAction",
  type: {
    name: "Composite",
    className: "V1HTTPGetAction",
    modelProperties: {
      host: {
        serializedName: "host",
        type: {
          name: "String"
        }
      },
      httpHeaders: {
        serializedName: "httpHeaders",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1HTTPHeader"
            }
          }
        }
      },
      path: {
        serializedName: "path",
        type: {
          name: "String"
        }
      },
      port: {
        required: true,
        serializedName: "port",
        type: {
          name: "String"
        }
      },
      scheme: {
        serializedName: "scheme",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1HostDisk: msRest.CompositeMapper = {
  serializedName: "v1.HostDisk",
  type: {
    name: "Composite",
    className: "V1HostDisk",
    modelProperties: {
      capacity: {
        serializedName: "capacity",
        type: {
          name: "String"
        }
      },
      path: {
        required: true,
        serializedName: "path",
        type: {
          name: "String"
        }
      },
      shared: {
        serializedName: "shared",
        type: {
          name: "Boolean"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1Initializer: msRest.CompositeMapper = {
  serializedName: "v1.Initializer",
  type: {
    name: "Composite",
    className: "V1Initializer",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1StatusCause: msRest.CompositeMapper = {
  serializedName: "v1.StatusCause",
  type: {
    name: "Composite",
    className: "V1StatusCause",
    modelProperties: {
      field: {
        serializedName: "field",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1StatusDetails: msRest.CompositeMapper = {
  serializedName: "v1.StatusDetails",
  type: {
    name: "Composite",
    className: "V1StatusDetails",
    modelProperties: {
      causes: {
        serializedName: "causes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1StatusCause"
            }
          }
        }
      },
      group: {
        serializedName: "group",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      retryAfterSeconds: {
        serializedName: "retryAfterSeconds",
        type: {
          name: "Number"
        }
      },
      uid: {
        serializedName: "uid",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1ListMeta: msRest.CompositeMapper = {
  serializedName: "v1.ListMeta",
  type: {
    name: "Composite",
    className: "V1ListMeta",
    modelProperties: {
      continueProperty: {
        serializedName: "continue",
        type: {
          name: "String"
        }
      },
      resourceVersion: {
        serializedName: "resourceVersion",
        type: {
          name: "String"
        }
      },
      selfLink: {
        serializedName: "selfLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1Status: msRest.CompositeMapper = {
  serializedName: "v1.Status",
  type: {
    name: "Composite",
    className: "V1Status",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      details: {
        serializedName: "details",
        type: {
          name: "Composite",
          className: "V1StatusDetails"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "V1ListMeta"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1Initializers: msRest.CompositeMapper = {
  serializedName: "v1.Initializers",
  type: {
    name: "Composite",
    className: "V1Initializers",
    modelProperties: {
      pending: {
        required: true,
        serializedName: "pending",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1Initializer"
            }
          }
        }
      },
      result: {
        serializedName: "result",
        type: {
          name: "Composite",
          className: "V1Status"
        }
      }
    }
  }
};

export const V1MultusNetwork: msRest.CompositeMapper = {
  serializedName: "v1.MultusNetwork",
  type: {
    name: "Composite",
    className: "V1MultusNetwork",
    modelProperties: {
      default: {
        serializedName: "default",
        type: {
          name: "Boolean"
        }
      },
      networkName: {
        required: true,
        serializedName: "networkName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1PodNetwork: msRest.CompositeMapper = {
  serializedName: "v1.PodNetwork",
  type: {
    name: "Composite",
    className: "V1PodNetwork",
    modelProperties: {
      vmNetworkCIDR: {
        serializedName: "vmNetworkCIDR",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1Network: msRest.CompositeMapper = {
  serializedName: "v1.Network",
  type: {
    name: "Composite",
    className: "V1Network",
    modelProperties: {
      genie: {
        serializedName: "genie",
        type: {
          name: "Composite",
          className: "V1GenieNetwork"
        }
      },
      multus: {
        serializedName: "multus",
        type: {
          name: "Composite",
          className: "V1MultusNetwork"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      pod: {
        serializedName: "pod",
        type: {
          name: "Composite",
          className: "V1PodNetwork"
        }
      }
    }
  }
};

export const V1OwnerReference: msRest.CompositeMapper = {
  serializedName: "v1.OwnerReference",
  type: {
    name: "Composite",
    className: "V1OwnerReference",
    modelProperties: {
      apiVersion: {
        required: true,
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      blockOwnerDeletion: {
        serializedName: "blockOwnerDeletion",
        type: {
          name: "Boolean"
        }
      },
      controller: {
        serializedName: "controller",
        type: {
          name: "Boolean"
        }
      },
      kind: {
        required: true,
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      uid: {
        required: true,
        serializedName: "uid",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1ObjectMeta: msRest.CompositeMapper = {
  serializedName: "v1.ObjectMeta",
  type: {
    name: "Composite",
    className: "V1ObjectMeta",
    modelProperties: {
      annotations: {
        serializedName: "annotations",
        type: {
          name: "Object"
        }
      },
      clusterName: {
        serializedName: "clusterName",
        type: {
          name: "String"
        }
      },
      creationTimestamp: {
        serializedName: "creationTimestamp",
        type: {
          name: "String"
        }
      },
      deletionGracePeriodSeconds: {
        serializedName: "deletionGracePeriodSeconds",
        type: {
          name: "Number"
        }
      },
      deletionTimestamp: {
        serializedName: "deletionTimestamp",
        type: {
          name: "String"
        }
      },
      finalizers: {
        serializedName: "finalizers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      generateName: {
        serializedName: "generateName",
        type: {
          name: "String"
        }
      },
      generation: {
        serializedName: "generation",
        type: {
          name: "Number"
        }
      },
      initializers: {
        serializedName: "initializers",
        type: {
          name: "Composite",
          className: "V1Initializers"
        }
      },
      labels: {
        serializedName: "labels",
        type: {
          name: "Object"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      namespace: {
        serializedName: "namespace",
        type: {
          name: "String"
        }
      },
      ownerReferences: {
        serializedName: "ownerReferences",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1OwnerReference"
            }
          }
        }
      },
      resourceVersion: {
        serializedName: "resourceVersion",
        type: {
          name: "String"
        }
      },
      selfLink: {
        serializedName: "selfLink",
        type: {
          name: "String"
        }
      },
      uid: {
        serializedName: "uid",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1TypedLocalObjectReference: msRest.CompositeMapper = {
  serializedName: "v1.TypedLocalObjectReference",
  type: {
    name: "Composite",
    className: "V1TypedLocalObjectReference",
    modelProperties: {
      apiGroup: {
        required: true,
        serializedName: "apiGroup",
        type: {
          name: "String"
        }
      },
      kind: {
        required: true,
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1PersistentVolumeClaimSpec: msRest.CompositeMapper = {
  serializedName: "v1.PersistentVolumeClaimSpec",
  type: {
    name: "Composite",
    className: "V1PersistentVolumeClaimSpec",
    modelProperties: {
      accessModes: {
        serializedName: "accessModes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Object"
            }
          }
        }
      },
      dataSource: {
        serializedName: "dataSource",
        type: {
          name: "Composite",
          className: "V1TypedLocalObjectReference"
        }
      },
      resources: {
        serializedName: "resources",
        type: {
          name: "Composite",
          className: "V1ResourceRequirements"
        }
      },
      selector: {
        serializedName: "selector",
        type: {
          name: "Composite",
          className: "V1LabelSelector"
        }
      },
      storageClassName: {
        serializedName: "storageClassName",
        type: {
          name: "String"
        }
      },
      volumeMode: {
        serializedName: "volumeMode",
        type: {
          name: "Object"
        }
      },
      volumeName: {
        serializedName: "volumeName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1PodDNSConfigOption: msRest.CompositeMapper = {
  serializedName: "v1.PodDNSConfigOption",
  type: {
    name: "Composite",
    className: "V1PodDNSConfigOption",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1PodDNSConfig: msRest.CompositeMapper = {
  serializedName: "v1.PodDNSConfig",
  type: {
    name: "Composite",
    className: "V1PodDNSConfig",
    modelProperties: {
      nameservers: {
        serializedName: "nameservers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      options: {
        serializedName: "options",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1PodDNSConfigOption"
            }
          }
        }
      },
      searches: {
        serializedName: "searches",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const V1TCPSocketAction: msRest.CompositeMapper = {
  serializedName: "v1.TCPSocketAction",
  type: {
    name: "Composite",
    className: "V1TCPSocketAction",
    modelProperties: {
      host: {
        serializedName: "host",
        type: {
          name: "String"
        }
      },
      port: {
        required: true,
        serializedName: "port",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1Probe: msRest.CompositeMapper = {
  serializedName: "v1.Probe",
  type: {
    name: "Composite",
    className: "V1Probe",
    modelProperties: {
      failureThreshold: {
        serializedName: "failureThreshold",
        type: {
          name: "Number"
        }
      },
      httpGet: {
        serializedName: "httpGet",
        type: {
          name: "Composite",
          className: "V1HTTPGetAction"
        }
      },
      initialDelaySeconds: {
        serializedName: "initialDelaySeconds",
        type: {
          name: "Number"
        }
      },
      periodSeconds: {
        serializedName: "periodSeconds",
        type: {
          name: "Number"
        }
      },
      successThreshold: {
        serializedName: "successThreshold",
        type: {
          name: "Number"
        }
      },
      tcpSocket: {
        serializedName: "tcpSocket",
        type: {
          name: "Composite",
          className: "V1TCPSocketAction"
        }
      },
      timeoutSeconds: {
        serializedName: "timeoutSeconds",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const V1RootPaths: msRest.CompositeMapper = {
  serializedName: "v1.RootPaths",
  type: {
    name: "Composite",
    className: "V1RootPaths",
    modelProperties: {
      paths: {
        required: true,
        serializedName: "paths",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const V1SecretVolumeSource: msRest.CompositeMapper = {
  serializedName: "v1.SecretVolumeSource",
  type: {
    name: "Composite",
    className: "V1SecretVolumeSource",
    modelProperties: {
      optional: {
        serializedName: "optional",
        type: {
          name: "Boolean"
        }
      },
      secretName: {
        serializedName: "secretName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1ServiceAccountVolumeSource: msRest.CompositeMapper = {
  serializedName: "v1.ServiceAccountVolumeSource",
  type: {
    name: "Composite",
    className: "V1ServiceAccountVolumeSource",
    modelProperties: {
      serviceAccountName: {
        serializedName: "serviceAccountName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1Toleration: msRest.CompositeMapper = {
  serializedName: "v1.Toleration",
  type: {
    name: "Composite",
    className: "V1Toleration",
    modelProperties: {
      effect: {
        serializedName: "effect",
        type: {
          name: "String"
        }
      },
      key: {
        serializedName: "key",
        type: {
          name: "String"
        }
      },
      operator: {
        serializedName: "operator",
        type: {
          name: "String"
        }
      },
      tolerationSeconds: {
        serializedName: "tolerationSeconds",
        type: {
          name: "Number"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1alpha1DataVolumeSourceHTTP: msRest.CompositeMapper = {
  serializedName: "v1alpha1.DataVolumeSourceHTTP",
  type: {
    name: "Composite",
    className: "V1alpha1DataVolumeSourceHTTP",
    modelProperties: {
      certConfigMap: {
        serializedName: "certConfigMap",
        type: {
          name: "String"
        }
      },
      secretRef: {
        serializedName: "secretRef",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1alpha1DataVolumeSourcePVC: msRest.CompositeMapper = {
  serializedName: "v1alpha1.DataVolumeSourcePVC",
  type: {
    name: "Composite",
    className: "V1alpha1DataVolumeSourcePVC",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      namespace: {
        serializedName: "namespace",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1alpha1DataVolumeSourceRegistry: msRest.CompositeMapper = {
  serializedName: "v1alpha1.DataVolumeSourceRegistry",
  type: {
    name: "Composite",
    className: "V1alpha1DataVolumeSourceRegistry",
    modelProperties: {
      certConfigMap: {
        serializedName: "certConfigMap",
        type: {
          name: "String"
        }
      },
      secretRef: {
        serializedName: "secretRef",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1alpha1DataVolumeSourceS3: msRest.CompositeMapper = {
  serializedName: "v1alpha1.DataVolumeSourceS3",
  type: {
    name: "Composite",
    className: "V1alpha1DataVolumeSourceS3",
    modelProperties: {
      secretRef: {
        serializedName: "secretRef",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1alpha1DataVolumeSource: msRest.CompositeMapper = {
  serializedName: "v1alpha1.DataVolumeSource",
  type: {
    name: "Composite",
    className: "V1alpha1DataVolumeSource",
    modelProperties: {
      blank: {
        serializedName: "blank",
        type: {
          name: "Object"
        }
      },
      http: {
        serializedName: "http",
        type: {
          name: "Composite",
          className: "V1alpha1DataVolumeSourceHTTP"
        }
      },
      pvc: {
        serializedName: "pvc",
        type: {
          name: "Composite",
          className: "V1alpha1DataVolumeSourcePVC"
        }
      },
      registry: {
        serializedName: "registry",
        type: {
          name: "Composite",
          className: "V1alpha1DataVolumeSourceRegistry"
        }
      },
      s3: {
        serializedName: "s3",
        type: {
          name: "Composite",
          className: "V1alpha1DataVolumeSourceS3"
        }
      },
      upload: {
        serializedName: "upload",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const V1alpha1DataVolumeSpec: msRest.CompositeMapper = {
  serializedName: "v1alpha1.DataVolumeSpec",
  type: {
    name: "Composite",
    className: "V1alpha1DataVolumeSpec",
    modelProperties: {
      contentType: {
        serializedName: "contentType",
        type: {
          name: "String"
        }
      },
      pvc: {
        required: true,
        serializedName: "pvc",
        type: {
          name: "Composite",
          className: "V1PersistentVolumeClaimSpec"
        }
      },
      source: {
        required: true,
        serializedName: "source",
        type: {
          name: "Composite",
          className: "V1alpha1DataVolumeSource"
        }
      }
    }
  }
};

export const V1alpha1DataVolumeStatus: msRest.CompositeMapper = {
  serializedName: "v1alpha1.DataVolumeStatus",
  type: {
    name: "Composite",
    className: "V1alpha1DataVolumeStatus",
    modelProperties: {
      phase: {
        serializedName: "phase",
        type: {
          name: "String"
        }
      },
      progress: {
        serializedName: "progress",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1alpha1DataVolume: msRest.CompositeMapper = {
  serializedName: "v1alpha1.DataVolume",
  type: {
    name: "Composite",
    className: "V1alpha1DataVolume",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "V1ObjectMeta"
        }
      },
      spec: {
        required: true,
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "V1alpha1DataVolumeSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "V1alpha1DataVolumeStatus"
        }
      }
    }
  }
};

export const V1Volume: msRest.CompositeMapper = {
  serializedName: "v1.Volume",
  type: {
    name: "Composite",
    className: "V1Volume",
    modelProperties: {
      cloudInitNoCloud: {
        serializedName: "cloudInitNoCloud",
        type: {
          name: "Composite",
          className: "V1CloudInitNoCloudSource"
        }
      },
      configMap: {
        serializedName: "configMap",
        type: {
          name: "Composite",
          className: "V1ConfigMapVolumeSource"
        }
      },
      containerDisk: {
        serializedName: "containerDisk",
        type: {
          name: "Composite",
          className: "V1ContainerDiskSource"
        }
      },
      dataVolume: {
        serializedName: "dataVolume",
        type: {
          name: "Composite",
          className: "V1DataVolumeSource"
        }
      },
      emptyDisk: {
        serializedName: "emptyDisk",
        type: {
          name: "Composite",
          className: "V1EmptyDiskSource"
        }
      },
      ephemeral: {
        serializedName: "ephemeral",
        type: {
          name: "Composite",
          className: "V1EphemeralVolumeSource"
        }
      },
      hostDisk: {
        serializedName: "hostDisk",
        type: {
          name: "Composite",
          className: "V1HostDisk"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      persistentVolumeClaim: {
        serializedName: "persistentVolumeClaim",
        type: {
          name: "Composite",
          className: "V1PersistentVolumeClaimVolumeSource"
        }
      },
      secret: {
        serializedName: "secret",
        type: {
          name: "Composite",
          className: "V1SecretVolumeSource"
        }
      },
      serviceAccount: {
        serializedName: "serviceAccount",
        type: {
          name: "Composite",
          className: "V1ServiceAccountVolumeSource"
        }
      }
    }
  }
};

export const V1VirtualMachineInstanceSpec: msRest.CompositeMapper = {
  serializedName: "v1.VirtualMachineInstanceSpec",
  type: {
    name: "Composite",
    className: "V1VirtualMachineInstanceSpec",
    modelProperties: {
      affinity: {
        serializedName: "affinity",
        type: {
          name: "Composite",
          className: "V1Affinity"
        }
      },
      dnsConfig: {
        serializedName: "dnsConfig",
        type: {
          name: "Composite",
          className: "V1PodDNSConfig"
        }
      },
      dnsPolicy: {
        serializedName: "dnsPolicy",
        type: {
          name: "String"
        }
      },
      domain: {
        required: true,
        serializedName: "domain",
        type: {
          name: "Composite",
          className: "V1DomainSpec"
        }
      },
      evictionStrategy: {
        serializedName: "evictionStrategy",
        type: {
          name: "Object"
        }
      },
      hostname: {
        serializedName: "hostname",
        type: {
          name: "String"
        }
      },
      livenessProbe: {
        serializedName: "livenessProbe",
        type: {
          name: "Composite",
          className: "V1Probe"
        }
      },
      networks: {
        serializedName: "networks",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1Network"
            }
          }
        }
      },
      nodeSelector: {
        serializedName: "nodeSelector",
        type: {
          name: "Object"
        }
      },
      readinessProbe: {
        serializedName: "readinessProbe",
        type: {
          name: "Composite",
          className: "V1Probe"
        }
      },
      subdomain: {
        serializedName: "subdomain",
        type: {
          name: "String"
        }
      },
      terminationGracePeriodSeconds: {
        serializedName: "terminationGracePeriodSeconds",
        type: {
          name: "Number"
        }
      },
      tolerations: {
        serializedName: "tolerations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1Toleration"
            }
          }
        }
      },
      volumes: {
        serializedName: "volumes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1Volume"
            }
          }
        }
      }
    }
  }
};

export const V1VirtualMachineInstanceTemplateSpec: msRest.CompositeMapper = {
  serializedName: "v1.VirtualMachineInstanceTemplateSpec",
  type: {
    name: "Composite",
    className: "V1VirtualMachineInstanceTemplateSpec",
    modelProperties: {
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "V1ObjectMeta"
        }
      },
      spec: {
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "V1VirtualMachineInstanceSpec"
        }
      }
    }
  }
};

export const V1VirtualMachineSpec: msRest.CompositeMapper = {
  serializedName: "v1.VirtualMachineSpec",
  type: {
    name: "Composite",
    className: "V1VirtualMachineSpec",
    modelProperties: {
      dataVolumeTemplates: {
        serializedName: "dataVolumeTemplates",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1alpha1DataVolume"
            }
          }
        }
      },
      runStrategy: {
        serializedName: "runStrategy",
        type: {
          name: "Object"
        }
      },
      running: {
        serializedName: "running",
        type: {
          name: "Boolean"
        }
      },
      template: {
        required: true,
        serializedName: "template",
        type: {
          name: "Composite",
          className: "V1VirtualMachineInstanceTemplateSpec"
        }
      }
    }
  }
};

export const V1VirtualMachineCondition: msRest.CompositeMapper = {
  serializedName: "v1.VirtualMachineCondition",
  type: {
    name: "Composite",
    className: "V1VirtualMachineCondition",
    modelProperties: {
      lastProbeTime: {
        serializedName: "lastProbeTime",
        type: {
          name: "String"
        }
      },
      lastTransitionTime: {
        serializedName: "lastTransitionTime",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      status: {
        required: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1VirtualMachineStateChangeRequest: msRest.CompositeMapper = {
  serializedName: "v1.VirtualMachineStateChangeRequest",
  type: {
    name: "Composite",
    className: "V1VirtualMachineStateChangeRequest",
    modelProperties: {
      action: {
        required: true,
        serializedName: "action",
        type: {
          name: "String"
        }
      },
      uid: {
        serializedName: "uid",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const V1VirtualMachineStatus: msRest.CompositeMapper = {
  serializedName: "v1.VirtualMachineStatus",
  type: {
    name: "Composite",
    className: "V1VirtualMachineStatus",
    modelProperties: {
      conditions: {
        serializedName: "conditions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1VirtualMachineCondition"
            }
          }
        }
      },
      created: {
        serializedName: "created",
        type: {
          name: "Boolean"
        }
      },
      ready: {
        serializedName: "ready",
        type: {
          name: "Boolean"
        }
      },
      stateChangeRequests: {
        serializedName: "stateChangeRequests",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1VirtualMachineStateChangeRequest"
            }
          }
        }
      }
    }
  }
};

export const V1VirtualMachine: msRest.CompositeMapper = {
  serializedName: "v1.VirtualMachine",
  type: {
    name: "Composite",
    className: "V1VirtualMachine",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "V1ObjectMeta"
        }
      },
      spec: {
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "V1VirtualMachineSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "V1VirtualMachineStatus"
        }
      }
    }
  }
};

export const V1VirtualMachineInstanceCondition: msRest.CompositeMapper = {
  serializedName: "v1.VirtualMachineInstanceCondition",
  type: {
    name: "Composite",
    className: "V1VirtualMachineInstanceCondition",
    modelProperties: {
      lastProbeTime: {
        serializedName: "lastProbeTime",
        type: {
          name: "String"
        }
      },
      lastTransitionTime: {
        serializedName: "lastTransitionTime",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      status: {
        required: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1VirtualMachineInstanceNetworkInterface: msRest.CompositeMapper = {
  serializedName: "v1.VirtualMachineInstanceNetworkInterface",
  type: {
    name: "Composite",
    className: "V1VirtualMachineInstanceNetworkInterface",
    modelProperties: {
      interfaceName: {
        serializedName: "interfaceName",
        type: {
          name: "String"
        }
      },
      ipAddress: {
        serializedName: "ipAddress",
        type: {
          name: "String"
        }
      },
      ipAddresses: {
        serializedName: "ipAddresses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      mac: {
        serializedName: "mac",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1VirtualMachineInstanceMigrationState: msRest.CompositeMapper = {
  serializedName: "v1.VirtualMachineInstanceMigrationState",
  type: {
    name: "Composite",
    className: "V1VirtualMachineInstanceMigrationState",
    modelProperties: {
      abortRequested: {
        serializedName: "abortRequested",
        type: {
          name: "Boolean"
        }
      },
      abortStatus: {
        serializedName: "abortStatus",
        type: {
          name: "String"
        }
      },
      completed: {
        serializedName: "completed",
        type: {
          name: "Boolean"
        }
      },
      endTimestamp: {
        serializedName: "endTimestamp",
        type: {
          name: "String"
        }
      },
      failed: {
        serializedName: "failed",
        type: {
          name: "Boolean"
        }
      },
      migrationUid: {
        serializedName: "migrationUid",
        type: {
          name: "String"
        }
      },
      sourceNode: {
        serializedName: "sourceNode",
        type: {
          name: "String"
        }
      },
      startTimestamp: {
        serializedName: "startTimestamp",
        type: {
          name: "String"
        }
      },
      targetDirectMigrationNodePorts: {
        serializedName: "targetDirectMigrationNodePorts",
        type: {
          name: "Object"
        }
      },
      targetNode: {
        serializedName: "targetNode",
        type: {
          name: "String"
        }
      },
      targetNodeAddress: {
        serializedName: "targetNodeAddress",
        type: {
          name: "String"
        }
      },
      targetNodeDomainDetected: {
        serializedName: "targetNodeDomainDetected",
        type: {
          name: "Boolean"
        }
      },
      targetPod: {
        serializedName: "targetPod",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1VirtualMachineInstanceStatus: msRest.CompositeMapper = {
  serializedName: "v1.VirtualMachineInstanceStatus",
  type: {
    name: "Composite",
    className: "V1VirtualMachineInstanceStatus",
    modelProperties: {
      conditions: {
        serializedName: "conditions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1VirtualMachineInstanceCondition"
            }
          }
        }
      },
      interfaces: {
        serializedName: "interfaces",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1VirtualMachineInstanceNetworkInterface"
            }
          }
        }
      },
      migrationMethod: {
        serializedName: "migrationMethod",
        type: {
          name: "String"
        }
      },
      migrationState: {
        serializedName: "migrationState",
        type: {
          name: "Composite",
          className: "V1VirtualMachineInstanceMigrationState"
        }
      },
      nodeName: {
        serializedName: "nodeName",
        type: {
          name: "String"
        }
      },
      phase: {
        serializedName: "phase",
        type: {
          name: "String"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1VirtualMachineInstance: msRest.CompositeMapper = {
  serializedName: "v1.VirtualMachineInstance",
  type: {
    name: "Composite",
    className: "V1VirtualMachineInstance",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "V1ObjectMeta"
        }
      },
      spec: {
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "V1VirtualMachineInstanceSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "V1VirtualMachineInstanceStatus"
        }
      }
    }
  }
};

export const V1VirtualMachineInstanceList: msRest.CompositeMapper = {
  serializedName: "v1.VirtualMachineInstanceList",
  type: {
    name: "Composite",
    className: "V1VirtualMachineInstanceList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1VirtualMachineInstance"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "V1ListMeta"
        }
      }
    }
  }
};

export const V1VirtualMachineInstanceMigrationSpec: msRest.CompositeMapper = {
  serializedName: "v1.VirtualMachineInstanceMigrationSpec",
  type: {
    name: "Composite",
    className: "V1VirtualMachineInstanceMigrationSpec",
    modelProperties: {
      vmiName: {
        serializedName: "vmiName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1VirtualMachineInstanceMigrationCondition: msRest.CompositeMapper = {
  serializedName: "v1.VirtualMachineInstanceMigrationCondition",
  type: {
    name: "Composite",
    className: "V1VirtualMachineInstanceMigrationCondition",
    modelProperties: {
      lastProbeTime: {
        serializedName: "lastProbeTime",
        type: {
          name: "String"
        }
      },
      lastTransitionTime: {
        serializedName: "lastTransitionTime",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      status: {
        required: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1VirtualMachineInstanceMigrationStatus: msRest.CompositeMapper = {
  serializedName: "v1.VirtualMachineInstanceMigrationStatus",
  type: {
    name: "Composite",
    className: "V1VirtualMachineInstanceMigrationStatus",
    modelProperties: {
      conditions: {
        serializedName: "conditions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1VirtualMachineInstanceMigrationCondition"
            }
          }
        }
      },
      phase: {
        serializedName: "phase",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1VirtualMachineInstanceMigration: msRest.CompositeMapper = {
  serializedName: "v1.VirtualMachineInstanceMigration",
  type: {
    name: "Composite",
    className: "V1VirtualMachineInstanceMigration",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "V1ObjectMeta"
        }
      },
      spec: {
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "V1VirtualMachineInstanceMigrationSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "V1VirtualMachineInstanceMigrationStatus"
        }
      }
    }
  }
};

export const V1VirtualMachineInstanceMigrationList: msRest.CompositeMapper = {
  serializedName: "v1.VirtualMachineInstanceMigrationList",
  type: {
    name: "Composite",
    className: "V1VirtualMachineInstanceMigrationList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1VirtualMachineInstanceMigration"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "V1ListMeta"
        }
      }
    }
  }
};

export const V1VirtualMachineInstancePresetSpec: msRest.CompositeMapper = {
  serializedName: "v1.VirtualMachineInstancePresetSpec",
  type: {
    name: "Composite",
    className: "V1VirtualMachineInstancePresetSpec",
    modelProperties: {
      domain: {
        serializedName: "domain",
        type: {
          name: "Composite",
          className: "V1DomainSpec"
        }
      },
      selector: {
        required: true,
        serializedName: "selector",
        type: {
          name: "Composite",
          className: "V1LabelSelector"
        }
      }
    }
  }
};

export const V1VirtualMachineInstancePreset: msRest.CompositeMapper = {
  serializedName: "v1.VirtualMachineInstancePreset",
  type: {
    name: "Composite",
    className: "V1VirtualMachineInstancePreset",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "V1ObjectMeta"
        }
      },
      spec: {
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "V1VirtualMachineInstancePresetSpec"
        }
      }
    }
  }
};

export const V1VirtualMachineInstancePresetList: msRest.CompositeMapper = {
  serializedName: "v1.VirtualMachineInstancePresetList",
  type: {
    name: "Composite",
    className: "V1VirtualMachineInstancePresetList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1VirtualMachineInstancePreset"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "V1ListMeta"
        }
      }
    }
  }
};

export const V1VirtualMachineInstanceReplicaSetSpec: msRest.CompositeMapper = {
  serializedName: "v1.VirtualMachineInstanceReplicaSetSpec",
  type: {
    name: "Composite",
    className: "V1VirtualMachineInstanceReplicaSetSpec",
    modelProperties: {
      paused: {
        serializedName: "paused",
        type: {
          name: "Boolean"
        }
      },
      replicas: {
        serializedName: "replicas",
        type: {
          name: "Number"
        }
      },
      selector: {
        required: true,
        serializedName: "selector",
        type: {
          name: "Composite",
          className: "V1LabelSelector"
        }
      },
      template: {
        required: true,
        serializedName: "template",
        type: {
          name: "Composite",
          className: "V1VirtualMachineInstanceTemplateSpec"
        }
      }
    }
  }
};

export const V1VirtualMachineInstanceReplicaSetCondition: msRest.CompositeMapper = {
  serializedName: "v1.VirtualMachineInstanceReplicaSetCondition",
  type: {
    name: "Composite",
    className: "V1VirtualMachineInstanceReplicaSetCondition",
    modelProperties: {
      lastProbeTime: {
        serializedName: "lastProbeTime",
        type: {
          name: "String"
        }
      },
      lastTransitionTime: {
        serializedName: "lastTransitionTime",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      status: {
        required: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const V1VirtualMachineInstanceReplicaSetStatus: msRest.CompositeMapper = {
  serializedName: "v1.VirtualMachineInstanceReplicaSetStatus",
  type: {
    name: "Composite",
    className: "V1VirtualMachineInstanceReplicaSetStatus",
    modelProperties: {
      conditions: {
        serializedName: "conditions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1VirtualMachineInstanceReplicaSetCondition"
            }
          }
        }
      },
      labelSelector: {
        serializedName: "labelSelector",
        type: {
          name: "String"
        }
      },
      readyReplicas: {
        serializedName: "readyReplicas",
        type: {
          name: "Number"
        }
      },
      replicas: {
        serializedName: "replicas",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const V1VirtualMachineInstanceReplicaSet: msRest.CompositeMapper = {
  serializedName: "v1.VirtualMachineInstanceReplicaSet",
  type: {
    name: "Composite",
    className: "V1VirtualMachineInstanceReplicaSet",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "V1ObjectMeta"
        }
      },
      spec: {
        serializedName: "spec",
        type: {
          name: "Composite",
          className: "V1VirtualMachineInstanceReplicaSetSpec"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "V1VirtualMachineInstanceReplicaSetStatus"
        }
      }
    }
  }
};

export const V1VirtualMachineInstanceReplicaSetList: msRest.CompositeMapper = {
  serializedName: "v1.VirtualMachineInstanceReplicaSetList",
  type: {
    name: "Composite",
    className: "V1VirtualMachineInstanceReplicaSetList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1VirtualMachineInstanceReplicaSet"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "V1ListMeta"
        }
      }
    }
  }
};

export const V1VirtualMachineList: msRest.CompositeMapper = {
  serializedName: "v1.VirtualMachineList",
  type: {
    name: "Composite",
    className: "V1VirtualMachineList",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      items: {
        required: true,
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "V1VirtualMachine"
            }
          }
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      metadata: {
        required: true,
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "V1ListMeta"
        }
      }
    }
  }
};

export const V1WatchEvent: msRest.CompositeMapper = {
  serializedName: "v1.WatchEvent",
  type: {
    name: "Composite",
    className: "V1WatchEvent",
    modelProperties: {
      object: {
        required: true,
        serializedName: "object",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};
